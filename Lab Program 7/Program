class WrongAgeException extends Exception {
 public WrongAgeException(String message) {
 super(message); } }
class Father {
 int fatherAge;
 public Father(int age) throws WrongAgeException {
 if (age < 0) {
 throw new WrongAgeException("Father's age cannot be
negative!");
 }
 this.fatherAge = age;
 System.out.println("Father's Age: " + fatherAge); } }
class Son extends Father {
 int sonAge;
 public Son(int fatherAge, int sonAge) throws WrongAgeException {
 super(fatherAge);
 if (sonAge < 0) {
 throw new WrongAgeException("Son's age cannot be negative!");
 }
 if (sonAge >= fatherAge) {
 throw new WrongAgeException("Son's age cannot be greater than
or equal to father's age!");
 }
 this.sonAge = sonAge;
 System.out.println("Son's Age: " + sonAge); } }
public class ExceptionMain {
44
 public static void main(String[] args) {
 java.util.Scanner sc = new java.util.Scanner(System.in);
 try {
 System.out.print("Enter Father's Age: ");
 int fatherAge = sc.nextInt();
 System.out.print("Enter Son's Age: ");
 int sonAge = sc.nextInt();
 Son son = new Son(fatherAge, sonAge);
 } catch (WrongAgeException e) {
 System.out.println("Exception: " + e.getMessage());
 } catch (Exception e) {
 System.out.println("Unexpected Exception: " + e);} } }
